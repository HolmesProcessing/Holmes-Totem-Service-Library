import unittest
import random
import ipaddress
import tempfile
import os
from python3.services.inputtype import (
    Detect,
    Errors,
    Types,
    ValidateIP,
    ValidateDomain,
    ValidateEmail,
    ValidateFile,
    __initTldMapHelper as initTldMapHelper # normally don't do that, instead import InitializeTLDMap(path)
)

random.seed()
def rand(i=255, j=None):
    if not j:
        return random.randint(0, i)
    return random.randint(i, j)

def nrand(i=255, j=None, n=1):
    return [rand(i,j) for _ in range(n)]


def genAddress(prefixLen, ip):
    address = 0
    size = len(ip)
    for i in range(0,size):
        address |= ip[i]<<((size-i-1)*8)
    if size == 4:
        mask = __masks4[prefixLen]
    else:
        mask = __masks6[prefixLen]
    return address&mask, mask

def makeIP(i, size):
    if size == 4:
        return ipaddress.IPv4Address(i)
    else:
        return ipaddress.IPv6Address(i)


def genTooLow(prefixLen, ip):
    r, _ = genAddress(prefixLen, ip)
    if r > 0:
        r -= 1
        return makeIP(r, len(ip))
    return None

def genFitting(prefixLen, ip):
    if prefixLen == len(ip)*8:
        return None, None
    r, mask = genAddress(prefixLen, ip)
    if len(ip) == 4:
        r2 = r + (mask ^ __masks4[32])
    else:
        r2 = r + (mask ^ __masks6[128])
    return makeIP(r+1, len(ip)), makeIP(r2, len(ip))

def genTooHigh(prefixLen, ip):
    r, mask = genAddress(prefixLen, ip)
    if r == mask:
        return None
    if len(ip) == 4:
        r += (mask ^ __masks4[32]) + 1
    else:
        r += (mask ^ __masks6[128]) + 1
    return makeIP(r, len(ip))


class InputtypesTest(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_0_ip(self):
        testcases = [
            ( #random public ip, just between the two private network ranges
                (rand(11, 126), rand(), rand(), rand()),
                True, None,
            ),
            ( #random private ip in 10.0.0.0/8
                (10, rand(), rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
            ( #random private ip in 172.16.0.0/12
                (172, rand(16, 30), rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
            ( #random private ip in 192.168.0.0/16
                (192, 168, rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
            ( #random loopback ip in 127.0.0.0/8
                (127, rand(), rand(), rand()),
                False, Errors.IPisLoopbackError,
            ),
            ( #random this-host-this-net ip in 0.0.0.0/8
                (0, rand(), rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
            ( #broadcast
                (255, 255, 255, 255),
                False, Errors.IPisNotPublicError,
            ),
            ( #ipv6 loopback
                (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
                False, Errors.IPisLoopbackError,
            ),
            ( #ipv6 unspecified
                (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
                False, Errors.IPisUnspecifiedError,
            ),
            ( #ipv6 multicast
                (255, rand(), rand(), rand(), rand(), rand(),
                    rand(), rand(), rand(), rand(), rand(), rand(),
                    rand(), rand(), rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
            ( #ipv6 link-local
                (255, rand(128, 190), rand(), rand(), rand(),
                    rand(), rand(), rand(), rand(), rand(), rand(),
                    rand(), rand(), rand(), rand(), rand()),
                False, Errors.IPisNotPublicError,
            ),
        ]
        for testcase in testcases:
            if len(testcase[0]) == 4:
                ip = ".".join([str(b) for b in testcase[0]])
            else:
                ip = ":".join([
                    "{:02x}".format(testcase[0][2*i]) +
                    "{:02x}".format(testcase[0][2*i+1])
                    for i in range(8)
                ])
            detected_type, ip, err = Detect(ip)
            try:
                if err == None:
                    self.assertEqual(detected_type, Types.IP)
                    ok, err = ValidateIP(ip)
                    self.assertEqual(ok, testcase[1])
                    self.assertEqual(err, testcase[2])
                    ipbytes = ip.packed
                    i = 0
                    while i < len(testcase[0]):
                        self.assertEqual(ipbytes[i], testcase[0][i])
                        i += 1
                else:
                    self.fail("No error expected ... but got one")
            except:
                print(testcase)
                raise

    def test_1_ipnet(self):
        testcases = [16, 4]
        for addrSize in testcases:
            for prefixLen in range(addrSize*8+1):
                ip = nrand(n=addrSize)

                if addrSize == 4:
                    cidr = ".".join([str(b) for b in ip])
                else:
                    cidr = ":".join([
                        "{:02x}".format(ip[2*i]) +
                        "{:02x}".format(ip[2*i+1])
                        for i in range(8)
                    ])
                cidr += "/"+str(prefixLen)

                try:
                    tooLow = genTooLow(prefixLen, ip)
                    r1, r2 = genFitting(prefixLen, ip)
                    tooHigh = genTooHigh(prefixLen, ip)

                    detected_type, ipnet, err = Detect(cidr)

                    self.assertTrue(detected_type == Types.IPNet)
                    if tooLow:
                        self.assertFalse(tooLow in ipnet)
                    if r1:
                        self.assertTrue(r1 in ipnet)
                    if r2:
                        self.assertTrue(r2 in ipnet)
                    if tooHigh:
                        self.assertFalse(tooHigh in ipnet)
                except:
                    print(cidr, tooLow, r1, r2, tooHigh, detected_type, ipnet, err)
                    raise

    def test_2_domainAndEmail(self):
        initTldMapHelper(b"""
# some sample tlds
COM
DE
XN--PUNYCODEY2342
            """.decode())
        testcases = [
            ("www.domain.de",                                   Types.Domain,   None,                       None),
            ("yet-another-domain.com",                          Types.Domain,   None,                       None),
            ("www.domain.eu",                                   Types.Domain,   None,                       Errors.InvalidTLDError),
            ("xn--punycode.subdomain2.subdomain1.domain.com",   Types.Domain,   None,                       None),
            ("test.-nodomain.de",                               Types.Unknown,  Errors.UnknownTypeError,    None),
            ("somename@somedomain.com",                         Types.Email,    None,                       None),
            ("webmaster123ya##ösäf@somedomain.com",             Types.Unknown,  Errors.UnknownTypeError,    None),
            ("somename@invalidtld.eu",                          Types.Email,    None,                       Errors.InvalidTLDError),
            ("somename@nodomain-.com",                          Types.Unknown,  Errors.UnknownTypeError,    None), # test case different
            ("somename@34.128.94.77",                           Types.Unknown,  Errors.UnknownTypeError,    None), # test case different
            ("somename@[34.128.94.77]",                         Types.Email,    None,                       None),
            ("Max Musterman <max@musterman.com>",               Types.Email,    None,                       None),
        ]
        for testcase in testcases:
            t, o, err = Detect(testcase[0])
            try:
                self.assertEqual(t, testcase[1])
                self.assertEqual(err, testcase[2])
                if t == Types.Domain:
                    v, err = ValidateDomain(o)
                elif t == Types.Email:
                    v, err = ValidateEmail(o)
                else:
                    err = None
                self.assertEqual(err, testcase[3])
            except:
                print(testcase)
                raise

    def test_3_file(self):
        file = tempfile.NamedTemporaryFile(mode='w+b', delete=False, dir="/tmp")
        path = file.name
        file.write(b"""
hello world!
""")
        file.close()

        testcases = [
            (os.path.basename(path), Types.File, None, None),
            ("../etc/shadow", Types.File, None, Errors.FileAccessDeniedError),
            ("../invalidtopleveldirectory/invalidfile", Types.Unknown, Errors.UnknownTypeError, None)
        ]

        for testcase in testcases:
            t, o, err = Detect(testcase[0])
            try:
                self.assertEqual(t, testcase[1])
                self.assertEqual(err, testcase[2])
                if t == Types.File:
                    _, err = ValidateFile(o)
                    self.assertEqual(err, testcase[3])
            except:
                print(testcase)
                raise

        os.remove(path)


"""
some masks for easier ip auto-generation
"""
__masks4 = [
    int("00000000000000000000000000000000", 2),
    int("10000000000000000000000000000000", 2),
    int("11000000000000000000000000000000", 2),
    int("11100000000000000000000000000000", 2),
    int("11110000000000000000000000000000", 2),
    int("11111000000000000000000000000000", 2),
    int("11111100000000000000000000000000", 2),
    int("11111110000000000000000000000000", 2),
    int("11111111000000000000000000000000", 2),
    int("11111111100000000000000000000000", 2),
    int("11111111110000000000000000000000", 2),
    int("11111111111000000000000000000000", 2),
    int("11111111111100000000000000000000", 2),
    int("11111111111110000000000000000000", 2),
    int("11111111111111000000000000000000", 2),
    int("11111111111111100000000000000000", 2),
    int("11111111111111110000000000000000", 2),
    int("11111111111111111000000000000000", 2),
    int("11111111111111111100000000000000", 2),
    int("11111111111111111110000000000000", 2),
    int("11111111111111111111000000000000", 2),
    int("11111111111111111111100000000000", 2),
    int("11111111111111111111110000000000", 2),
    int("11111111111111111111111000000000", 2),
    int("11111111111111111111111100000000", 2),
    int("11111111111111111111111110000000", 2),
    int("11111111111111111111111111000000", 2),
    int("11111111111111111111111111100000", 2),
    int("11111111111111111111111111110000", 2),
    int("11111111111111111111111111111000", 2),
    int("11111111111111111111111111111100", 2),
    int("11111111111111111111111111111110", 2),
    int("11111111111111111111111111111111", 2),
]
__masks6 = [
    int("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110", 2),
    int("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", 2),
]

if __name__ == '__main__':
    unittest.main()
